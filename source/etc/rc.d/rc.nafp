#!/bin/bash
#
# Copyright Derek Macias (parts of code from NUT package)
# Copyright macester (parts of code from NUT package)
# Copyright gfjardim (parts of code from NUT package)
# Copyright SimonF (parts of code from NUT package)
# Copyright Lime Technology (any and all other parts of Unraid)
#
# Copyright Patrick J. Volkerding, Sebeka, MN, USA (as original author)
# Copyright desertwitch (as maintainer of this file within the project)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License 2
# as published by the Free Software Foundation.
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
PROG="nafp"
PLGPATH="/boot/config/plugins/$PROG"

netatalk_start() {
  if [ -x /usr/sbin/netatalk ]; then
    echo "Starting AFP service...  /usr/sbin/netatalk"
    /usr/sbin/netatalk
  fi
}

# Stop netatalk
netatalk_stop() {
  echo "Stopping AFP service..."
  /usr/bin/pkill -f "^/usr/sbin/netatalk" 2> /dev/null
  sleep 3

  if [[ $(/usr/bin/pgrep -f "^/usr/sbin/netatalk" 2> /dev/null) ]]; then
    echo "AFP WARNING: Shutting down hanging 'netatalk' service..."
    TIMER=0
    while killall netatalk 2>/dev/null; do
      sleep 1
      killall netatalk
      TIMER=$((TIMER+1))
      if [ $TIMER -ge 15 ]; then
        echo "AFP WARNING: Hard-killing hanging 'netatalk' service..."
        killall -9 netatalk
        sleep 1
        break
      fi
    done
  fi

  if [[ $(/usr/bin/pgrep -f "^/usr/sbin/afpd" 2> /dev/null) ]]; then
    echo "AFP WARNING: Shutting down hanging 'afpd' service..."
    /usr/bin/pkill -f "^/usr/sbin/afpd" 2> /dev/null
    sleep 3

    TIMER=0
    while killall afpd 2>/dev/null; do
      sleep 1
      killall afpd
      TIMER=$((TIMER+1))
      if [ $TIMER -ge 15 ]; then
        echo "AFP WARNING: Hard-killing hanging 'afpd' service..."
        killall -9 afpd
        sleep 1
        break
      fi
    done
  fi

  if [[ $(/usr/bin/pgrep -f "^/usr/sbin/cnid_metad" 2> /dev/null) ]]; then
    echo "AFP WARNING: Shutting down hanging 'cnid_metad' service..."
    /usr/bin/pkill -f "^/usr/sbin/cnid_metad" 2> /dev/null
    sleep 3

    TIMER=0
    while killall cnid_metad 2>/dev/null; do
      sleep 1
      killall cnid_metad
      TIMER=$((TIMER+1))
      if [ $TIMER -ge 15 ]; then
        echo "AFP WARNING: Hard-killing hanging 'cnid_metad' service..."
        killall -9 cnid_metad
        sleep 1
        break
      fi
    done
  fi

  if [[ $(/usr/bin/pgrep -f "^/usr/sbin/cnid_dbd" 2> /dev/null) ]]; then
    echo "AFP WARNING: Shutting down hanging 'cnid_dbd' service..."
    /usr/bin/pkill -f "^/usr/sbin/cnid_dbd" 2> /dev/null
    sleep 3

    TIMER=0
    while killall cnid_dbd 2>/dev/null; do
      sleep 1
      killall cnid_dbd
      TIMER=$((TIMER+1))
      if [ $TIMER -ge 15 ]; then
        echo "AFP WARNING: Hard-killing hanging 'cnid_dbd' service..."
        killall -9 cnid_dbd
        sleep 1
        break
      fi
    done
  fi
}

# Restart netatalk
netatalk_restart() {
  netatalk_stop
  sleep 3
  netatalk_start
}

# Check if netatalk is running
netatalk_status() {
  PID="$(/usr/bin/pgrep -f "^/usr/sbin/netatalk" 2> /dev/null)"
  if [ "$PID" ]; then
    echo "AFP service is running.  PID: $PID"
  else
    echo "AFP service is stopped."
    exit 1
  fi
}

# Write netatalk config to USB
netatalk_writeconfig() {
  sleep 1

  if [ -d /mnt/user ]; then
    if [ ! -d /mnt/user/system/nafp ]; then
      echo "Creating default AFP database location..."
      mkdir /mnt/user/system/nafp
      chown root:root /mnt/user/system/nafp
      chmod 777 /mnt/user/system/nafp
    fi
  fi

  echo "Writing AFP configuration to USB..."

  if [ ! -d $PLGPATH/netatalk ]; then
    mkdir $PLGPATH/netatalk
  fi

  cp -rf /etc/netatalk/* $PLGPATH/netatalk/ >/dev/null 2>&1

  # set up permissions
  if [ -d /etc/netatalk ]; then
    echo "Updating permissions for AFP..."
    chown root:root /etc/netatalk
    chmod 755 /etc/netatalk
    chown root:root /etc/netatalk/*
    chmod 644 /etc/netatalk/*
  fi

  sleep 1
}


case "$1" in
'start')
  netatalk_writeconfig
  netatalk_start
  ;;
'stop')
  netatalk_writeconfig
  netatalk_stop
  ;;
'restart')
  netatalk_writeconfig
  netatalk_restart
  ;;
'status')
  netatalk_status
  ;;
'write_config')
  netatalk_writeconfig
  ;;
*)
  echo "usage $0 start|stop|restart|status|write_config"
esac
