#!/bin/bash
#
# Copyright Derek Macias (parts of code from NUT package)
# Copyright macester (parts of code from NUT package)
# Copyright gfjardim (parts of code from NUT package)
# Copyright SimonF (parts of code from NUT package)
# Copyright Lime Technology (any and all other parts of Unraid)
#
# Copyright desertwitch (as author and maintainer of this file)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License 2
# as published by the Free Software Foundation.
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# This script does a secure, anonymized collection of basic plugin usage metrics.
# The collection of such metrics can be disabled through the respective plugin settings.
#

sanitize_fval() {
    local unclean=$(cat)
    local cleaned=$(echo "$unclean" | sed "s/[;\"']/ /g")
    cleaned=$(echo "$cleaned" | sed 's/  */ /g' | sed 's/^ *//; s/ *$//')
    echo "$cleaned"
}

# shellcheck disable=SC1091
source /boot/config/plugins/nafp/nafp.cfg >/dev/null 2>&1

case "$1" in
	"devtest")
		[ "$METRICSAPI" == "disable" ] && echo "Metrics disabled, exiting..." && exit 0
		;;
	"conntest")
		[ "$VERBOSEMETRICS" != "1" ] && exec &>/dev/null
		[ "$METRICSAPI" == "disable" ] && echo "Metrics disabled, exiting..." && exit 0
		SLEEPTIME=120
		[[ ! $SLEEPTIME =~ ^[0-9]+$ ]] && SLEEPTIME=10
		echo "Sleeping for ${SLEEPTIME}s..."
		sleep $SLEEPTIME
		;;
	*)
		[ "$VERBOSEMETRICS" != "1" ] && exec &>/dev/null
		[ "$METRICSAPI" == "disable" ] && echo "Metrics disabled, exiting..." && exit 0
		SLEEPTIME=$((RANDOM % 600))
		[[ ! $SLEEPTIME =~ ^[0-9]+$ ]] && SLEEPTIME=10
		echo "Randomized sleeping for ${SLEEPTIME}s..."
		sleep $SLEEPTIME
		;;
esac

METRIC_ENDPOINT="https://plugin-stats.desertwitch.workers.dev"
METRIC_AUTHTOKEN=$(curl -fsS -m 180 --retry 5 --retry-delay 180 --retry-connrefused "${METRIC_ENDPOINT}/?connect")
if [ $? -ne 0 ]; then
	echo "$METRIC_AUTHTOKEN"
	echo "Failed to retrieve authorization token from endpoint."
	exit 0
fi
[ "$1" == "conntest"] && echo "Connection tested: OK (not sending metrics), exiting..." && exit 0

# shellcheck disable=SC1091
source /var/local/emhttp/var.ini >/dev/null 2>&1

CLIENTID_ANONYMIZED=$(echo -n "${flashGUID}" | md5sum | awk '{print $1}')
CLIENTID_UNRAID_VERSION="$version"

# shellcheck disable=SC1091
source /boot/config/plugins/nafp/nafp.cfg >/dev/null 2>&1

# ---------------------------------------------------------------------------------------

METRIC_PLUGIN="afp"
AFP_PLUGIN_VERSION=$(find /var/log/packages/ -type f -iname 'nafp-*' -printf '%f\n')
AFP_BACKEND=$(find /var/log/packages/ -type f -iname 'netatalk-*' -printf '%f\n')

if pgrep -x netatalk >/dev/null 2>&1; then
	AFP_RUNNING=true
else
	AFP_RUNNING=false
fi

if curl \
    -fsS -m 180 --retry 5 --retry-delay 180 --retry-connrefused \
    --write-out "%{http_code} " -o /dev/null \
    -H "User-Agent: plugin-metrics/1.0.0" \
    -H "Authorization: Bearer ${METRIC_AUTHTOKEN}" \
    -F "plugin=${METRIC_PLUGIN}" \
    -F "clientid=$( sanitize_fval <<< ${CLIENTID_ANONYMIZED} )" \
    -F "unraid_version=$( sanitize_fval <<< ${CLIENTID_UNRAID_VERSION} )" \
    -F "plugin_version=$( sanitize_fval <<< ${AFP_PLUGIN_VERSION} )" \
    -F "str1=$( sanitize_fval <<< ${AFP_BACKEND} )" \
    -F "bool1=$( sanitize_fval <<< ${AFP_RUNNING} )" \
"${METRIC_ENDPOINT}"
then
    echo "=> OK"
else
    echo "=> FAILURE"
fi
